{"version":3,"sources":["webpack:///webpack/bootstrap f525146eadb5dd60609f","webpack:///external \"electron\"","webpack:///external \"path\"","webpack:///./main.ts"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA,mDAA2C,cAAc;;AAEzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;AAEA;AACA;;;;;;;AChEA,qC;;;;;;ACAA,iC;;;;;;;;ACAA;;;;;;;;;GASG;;AAEH,wCAAuD;AACvD,kCAA6B;AAE7B;;;GAGG;AACH,IAAI,UAAU,GAA2B,IAAI,CAAC;AAE9C;;GAEG;AACH,IAAM,YAAY,GAAW,IAAI,CAAC,OAAO,CAAC,SAAS,EAAE,QAAQ,CAAC,CAAC;AAE/D;;GAEG;AACH;IACE,UAAU,GAAG,IAAI,wBAAa,CAAC;QAC7B,KAAK,EAAE,GAAG;QACV,MAAM,EAAE,GAAG;QACX,KAAK,EAAE,OAAO;QACd,IAAI,EAAE,KAAK;QACX,cAAc,EAAE,EAEf;KACF,CAAC,CAAC;IACH,UAAU,CAAC,OAAO,CAAC,YAAU,YAAY,gBAAa,CAAC,CAAC;IACxD,UAAU,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;IACzB,UAAU,CAAC,IAAI,CAAC,eAAe,EAAE;QAC/B,UAAU,CAAC,IAAI,EAAE,CAAC;IACpB,CAAC,CAAC,CAAC;IACH,UAAU,CAAC,EAAE,CAAC,QAAQ,EAAE;QACtB,UAAU,GAAG,IAAI,CAAC;IACpB,CAAC,CAAC,CAAC;AACL,CAAC;AAED,yBAAyB;AACzB,cAAG,CAAC,EAAE,CAAC,OAAO,EAAE,YAAY,CAAC,CAAC;AAE9B,oCAAoC;AACpC,cAAG,CAAC,EAAE,CAAC,mBAAmB,EAAE;IAC1B;;OAEG;IACH,EAAE,CAAC,CAAC,OAAO,CAAC,QAAQ,KAAK,QAAQ,CAAC,CAAC,CAAC;QAClC,cAAG,CAAC,IAAI,EAAE,CAAC;IACb,CAAC;AACH,CAAC,CAAC,CAAC;AAEH,cAAG,CAAC,EAAE,CAAC,UAAU,EAAE;IACjB;;;OAGG;IACH,EAAE,CAAC,CAAC,UAAU,KAAK,IAAI,CAAC,CAAC,CAAC;QACxB,YAAY,EAAE,CAAC;IACjB,CAAC;AACH,CAAC,CAAC,CAAC;AAEH,kBAAO,CAAC,EAAE,CAAC,gBAAgB,EAAE,UAAC,KAAK;IACjC,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAE,gBAAgB;IACtC,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,oBAAoB,EAAE,MAAM,CAAC,CAAC;AAClD,CAAC,CAAC,CAAC","file":"index.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 2);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap f525146eadb5dd60609f","module.exports = require(\"electron\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"electron\"\n// module id = 0\n// module chunks = 0","module.exports = require(\"path\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"path\"\n// module id = 1\n// module chunks = 0","/**\r\n * This file handles the Electron code and manages the windows\r\n *\r\n * This Source Code Form is subject to the terms of the Mozilla Public\r\n * License, v. 2.0. If a copy of the MPL was not distributed with this\r\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\r\n *\r\n * This file contains modified code based on the Electron Quick Start guide.\r\n * For reference see https://github.com/electron/electron-quick-start/blob/master/main.js\r\n */\r\n\r\nimport { app, BrowserWindow, ipcMain } from 'electron';\r\nimport * as path from 'path';\r\n\r\n/**\r\n * Keep a global reference of the window object, if you don't, the window will\r\n * be closed automatically when the JavaScript object is garbage collected.\r\n */\r\nlet mainWindow: Electron.BrowserWindow = null;\r\n\r\n/**\r\n * Computed directory of static files independent of operating system\r\n */\r\nconst clientFolder: string = path.resolve(__dirname, 'static');\r\n\r\n/**\r\n * Create a new main browser window\r\n */\r\nfunction createWindow(): void {\r\n  mainWindow = new BrowserWindow({\r\n    width: 800,\r\n    height: 600,\r\n    title: 'Duely',\r\n    show: false,\r\n    webPreferences: {\r\n      // sandbox: true\r\n    }\r\n  });\r\n  mainWindow.loadURL(`file://${clientFolder}/index.html`);\r\n  mainWindow.setMenu(null);\r\n  mainWindow.once('ready-to-show', () => {\r\n    mainWindow.show();\r\n  });\r\n  mainWindow.on('closed', () => {\r\n    mainWindow = null;\r\n  });\r\n}\r\n\r\n// Open window on startup\r\napp.on('ready', createWindow);\r\n\r\n// Quit when all windows are closed.\r\napp.on('window-all-closed', () => {\r\n  /* On OS X it is common for applications and their menu bar\r\n   * to stay active until the user quits explicitly with Cmd + Q\r\n   */\r\n  if (process.platform !== 'darwin') {\r\n    app.quit();\r\n  }\r\n});\r\n\r\napp.on('activate', () => {\r\n  /*\r\n   * On OS X it's common to re-create a window in the app when the\r\n   * dock icon is clicked and there are no other windows open.\r\n   */\r\n  if (mainWindow === null) {\r\n    createWindow();\r\n  }\r\n});\r\n\r\nipcMain.on('openSaveDialog', (event) => {\r\n  console.log('ping');  // prints \"ping\"\r\n  event.sender.send('asynchronous-reply', 'pong');\r\n});\r\n\n\n\n// WEBPACK FOOTER //\n// ./main.ts"],"sourceRoot":""}